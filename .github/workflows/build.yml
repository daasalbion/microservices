name: Build, test & coverage

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

permissions:
  contents: write
  id-token: write
  issues: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'zulu'

    - name: Build with Maven
      run: mvn --batch-mode --update-snapshots package

    - name: Archive CSV code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: csv-code-coverage-report
        path: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.csv

    - name: Archive XML code coverage results
      uses: actions/upload-artifact@v3
      with:
        name: xml-code-coverage-report
        path: ${{ github.workspace }}/build/reports/jacoco/test/jacocoTestReport.xml

  add-coverage-to-pr:
    name: Add test coverage to PR
    runs-on: ubuntu-latest
    needs: build
    if: github.ref != 'main'
    steps:
      - name: Download XML test coverage report
        uses: actions/download-artifact@v3
        with:
          name: xml-code-coverage-report

      - name: Add coverage to PR
        id: jacoco-pr
        uses: madrapps/jacoco-report@v1.3
        with:
          paths: jacocoTestReport.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 60

  update-coverage-badge:
    name: Update coverage badge
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: setup git config
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: Download CSV test coverage report
        uses: actions/download-artifact@v3
        with:
          name: csv-code-coverage-report

      - name: Generate JaCoCo Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          generate-branches-badge: true
          jacoco-csv-file: jacocoTestReport.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

      - name: commit the badge if it changed
        run: |
          if [[ `git status --porcelain` ]]; then
            git add .github/.
            git commit -m "Autogenerated JaCoCo coverage badge"
            git push origin main
          fi